{"name":"Product-management","tagline":"Manage your list of products (add, edit, delete)","body":"# Product Management\r\n\r\nWith this project you will have a clean interface to manage your products using power libraries as:\r\n\r\n - Spring Boot\r\n - Spring Data JPA \r\n - Spring Security\r\n - Thymeleaf\r\n - Dandelion \r\n - Jsoup\r\n - Mysql \r\n - H2 \r\n - Maven \r\n - Junit4\r\n - Slf4j\r\n - Bootstrap\r\n - Jquery\r\n \r\n \r\n You can browse the [javadoc](https://github.com/brrandrade/product-management/apidocs/index.html) for more information, including example usages.\r\n\r\n##Functional features:\r\n\r\n- Super user to modify data on server side\r\n- Operations allowed\r\n\t- Create\r\n\t- Update\r\n\t- Delete\r\n\t- Read\r\n- Listing products with pagination, sort and filter on server side process\r\n- Anonymous user can list all products\r\n\r\n## STS Dev Details\r\n\r\n![](sts-dev.png)\r\n\r\nMain class \r\n`com.engyes.product.ProductManagementApplication` defined as\r\n\r\n```java\r\n@ComponentScan( \"com.engyes.product\" )\r\n@Configuration\r\n@EnableAutoConfiguration\r\npublic class ProductManagementApplication {\r\n\r\n\tpublic static void main( String[] args ) {\r\n\t\tSpringApplication.run( ProductManagementApplication.class, args );\r\n\t}\r\n}\r\n```\r\n\r\nAs you can see the project is clean, it uses the Spring Boot feature to autoconfigure the most of services used, others are customized in others classes.\r\n\r\n## Usage\r\n\r\nNote, this project was created with Spring Tool suite (STS) and it doesn't mean you can't use others IDEs as (InteliJ, Eclipse....)\r\n\r\nRunning the project\r\n\r\n### Build\r\n\r\n\tmvn package\r\n      \r\nthen check `target` directory for update project archive `product-management-x.x.x-SNAPSHOT.jar`.\r\n\r\n### Dev profile\r\n\r\nWorking in development profile, you will have h2 database with 500 products on your database every time that you execute it.\r\n\r\nCommand\r\n\r\n\tmvn spring-boot:run\r\n\r\n### Prod profile\r\n\r\nFirst time in production, you will need to import the schema on your mysql database, for that, you only need to start the application with command below.\r\n\r\n\tSPRING_PROFILES_ACTIVE=production mvn spring-boot:run -Dspring.datasource.initialize=true\r\n\t\r\nor\r\n\r\n\tjava -jar -Dspring.profiles.active=production -Dspring.datasource.initialize=true product-management-x.x.x-SNAPSHOT.jar \r\n\r\nFor next time, you will have to use the command below to not modify the database\r\n\r\n\tSPRING_PROFILES_ACTIVE=production mvn spring-boot:run\r\n\r\nor\r\n\r\n\tjava -jar -Dspring.profiles.active=production product-management-x.x.x-SNAPSHOT.jar \r\n\r\n\r\n### Test\r\n\r\n\tmvn test\r\n      \r\nIt will run the full integrate test on project\r\n\r\n\r\n### History\r\n\r\n- 1.0 Initial version\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}